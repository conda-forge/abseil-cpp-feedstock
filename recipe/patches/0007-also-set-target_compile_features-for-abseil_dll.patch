From 7465f7b7ba540cc270ad991e0228027b1fe264cf Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Wed, 2 Mar 2022 13:10:15 +1100
Subject: [PATCH 07/10] also set target_compile_features for abseil_dll

---
 CMake/AbseilDll.cmake | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/CMake/AbseilDll.cmake b/CMake/AbseilDll.cmake
index aec198e..9379135 100644
--- a/CMake/AbseilDll.cmake
+++ b/CMake/AbseilDll.cmake
@@ -538,6 +538,25 @@ function(absl_make_dll)
     PRIVATE
       ${ABSL_DEFAULT_LINKOPTS}
   )
+
+  if(ABSL_PROPAGATE_CXX_STD)
+    # Abseil libraries require C++11 as the current minimum standard.
+    # Top-level application CMake projects should ensure a consistent C++
+    # standard for all compiled sources by setting CMAKE_CXX_STANDARD.
+    target_compile_features(abseil_dll PUBLIC cxx_std_${ABSL_CXX_STANDARD})
+  else()
+    # Note: This is legacy (before CMake 3.8) behavior. Setting the
+    # target-level CXX_STANDARD property to ABSL_CXX_STANDARD (which is
+    # initialized by CMAKE_CXX_STANDARD) should have no real effect, since
+    # that is the default value anyway.
+    #
+    # CXX_STANDARD_REQUIRED does guard against the top-level CMake project
+    # not having enabled CMAKE_CXX_STANDARD_REQUIRED (which prevents
+    # "decaying" to an older standard if the requested one isn't available).
+    set_property(TARGET abseil_dll PROPERTY CXX_STANDARD ${ABSL_CXX_STANDARD})
+    set_property(TARGET abseil_dll PROPERTY CXX_STANDARD_REQUIRED ON)
+  endif()
+
   set_property(TARGET abseil_dll PROPERTY LINKER_LANGUAGE "CXX")
   target_include_directories(
     abseil_dll
-- 
2.35.1.windows.2

