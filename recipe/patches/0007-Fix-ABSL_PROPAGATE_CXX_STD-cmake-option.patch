From 6401d1329e43ed76f9dc39baa2f7c08adca7693e Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio@traversaro.it>
Date: Wed, 15 Feb 2023 15:55:54 +0100
Subject: [PATCH 7/7] Fix ABSL_PROPAGATE_CXX_STD cmake option

---
 CMake/AbseilDll.cmake | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/CMake/AbseilDll.cmake b/CMake/AbseilDll.cmake
index eec6dd99..4ed03276 100644
--- a/CMake/AbseilDll.cmake
+++ b/CMake/AbseilDll.cmake
@@ -798,7 +798,7 @@ Cflags: -I\${includedir}${PC_CFLAGS}\n")
     # Abseil libraries require C++14 as the current minimum standard. When
     # compiled with C++17 (either because it is the compiler's default or
     # explicitly requested), then Abseil requires C++17.
-    _absl_target_compile_features_if_available(${_NAME} PUBLIC ${ABSL_INTERNAL_CXX_STD_FEATURE})
+    _absl_target_compile_features_if_available(${_dll} PUBLIC ${ABSL_INTERNAL_CXX_STD_FEATURE})
   else()
     # Note: This is legacy (before CMake 3.8) behavior. Setting the
     # target-level CXX_STANDARD property to ABSL_CXX_STANDARD (which is
@@ -808,8 +808,8 @@ Cflags: -I\${includedir}${PC_CFLAGS}\n")
     # CXX_STANDARD_REQUIRED does guard against the top-level CMake project
     # not having enabled CMAKE_CXX_STANDARD_REQUIRED (which prevents
     # "decaying" to an older standard if the requested one isn't available).
-    set_property(TARGET ${_NAME} PROPERTY CXX_STANDARD ${ABSL_CXX_STANDARD})
-    set_property(TARGET ${_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
+    set_property(TARGET ${_dll} PROPERTY CXX_STANDARD ${ABSL_CXX_STANDARD})
+    set_property(TARGET ${_dll} PROPERTY CXX_STANDARD_REQUIRED ON)
   endif()
 
   install(TARGETS ${_dll} EXPORT ${PROJECT_NAME}Targets
-- 
2.33.0.windows.2

